import argparse
import sys, os
import logging


os.environ["MKL_NUM_THREADS"] = "1"
os.environ["NUMEXPR_NUM_THREADS"] = "1"
os.environ["OMP_NUM_THREADS"] = "1"

class MainArgParser:
    def __init__(self):
        parser = argparse.ArgumentParser(prog='fileconv')
        parser.add_argument(dest='subfunc', help='Subcommands: ')
        args = parser.parse_args(sys.argv[1:2])
        getattr(self, args.subfunc)()
    
    def AA2SV(self):
        parser = argparse.ArgumentParser(description='Convert AA graph data to a SV file')
        parser.add_argument('-f', '--graph-file',
                            dest='graph_file',
                            required=True,
                            help='Individual graph file generated by AA')
        args = parser.parse_args(sys.argv[2:])
        graph_data = open(args.graph_file)
        res = 'chrom_5p\tbkpos_5p\tstrand_5p\tchrom_3p\tbkpos_3p\tstrand_3p\tavg_cn\n'
        cnt = 0
        for line in graph_data.readlines():
            a = line.split('\t')
            entry = ''
            if a[0] == 'discordant': # deal with the SV line
                if cnt>0:
                    entry += '\n'
                cnt += 1
                chrom = a[1].split('->')
                chrom_5p = chrom[0].split(':')
                chrom_3p = chrom[1].split(':')
                if chrom_5p[1][-1] == '+' and chrom_3p[1][-1] == '-':
                    entry += chrom_5p[0]+'\t'+chrom_5p[1][0:-1]+'\t'+'+'+'\t' \
                            +chrom_3p[0]+'\t'+chrom_3p[1][0:-1]+'\t'+'+'+'\t'
                elif chrom_5p[1][-1] == '+' and chrom_3p[1][-1] == '+':
                    entry += chrom_5p[0]+'\t'+chrom_5p[1][0:-1]+'\t'+'+'+'\t' \
                            +chrom_3p[0]+'\t'+chrom_3p[1][0:-1]+'\t'+'-'+'\t'
                elif chrom_5p[1][-1] == '-' and chrom_3p[1][-1] == '-':
                    entry += chrom_5p[0]+'\t'+chrom_5p[1][0:-1]+'\t'+'-'+'\t' \
                            +chrom_3p[0]+'\t'+chrom_3p[1][0:-1]+'\t'+'+'+'\t'
                elif chrom_5p[1][-1] == '-' and chrom_3p[1][-1] == '+': # A- -> B- <=> B+ -> A+
                    entry += chrom_3p[0]+'\t'+chrom_3p[1][0:-1]+'\t'+'+'+'\t' \
                            +chrom_5p[0]+'\t'+chrom_5p[1][0:-1]+'\t'+'+'+'\t'
                entry += a[2]
            res += entry
        dir = args.graph_file.split('\\')
        out_name = dir[-1][0:-9]+'sv.txt'
        with open(out_name,"w") as f:
            f.write(res)

    def AA2Seg(self):
        parser = argparse.ArgumentParser(description='Convert AA graph data to a SV file')
        parser.add_argument('-f', '--graph-file',
                            dest='graph_file',
                            required=True,
                            help='Individual graph file generated by AA')
        args = parser.parse_args(sys.argv[2:])
        graph_data = open(args.graph_file)
        res = ''
        for line in graph_data.readlines():
            a = line.split('\t')
            entry = ''
            if a[0] == 'sequence': # deal with the Segment line
                if res != '':
                    entry += '\n'
                start = a[1].split(':')
                end = a[2].split(':')
                entry += start[0]+':'+start[1][0:-1]+'-'+end[1][0:-1]+'\t'+a[3]
                res += entry
        dir = args.graph_file.split('\\')
        out_name = dir[-1][0:-9]+'seg.txt'
        with open(out_name,"w") as f:
            f.write(res)

if __name__ == '__main__':
    MainArgParser()

